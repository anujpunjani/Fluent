statements      : NEWLINE* statement (NEWLINE+ statement)* NEWLINE*

statement       : KEYWORD:return expr?
                : KEYWORD:break
                : KEYWORD:continue
                : KEYWORD:pass
                : expr

expr            : IDENTIFIER EQ expr
                : comp-expr ((KEYWORD:AND|KEYWORD:OR) comp-expr)*

comp-expr       : NOT comp-expr
                : arith-expr ((EE|NE|LT|LTE|GT|GTE) arith-expr)*

arith-expr      : term ((PLUS|MINUS) term)*

term            : factor ((MUL|DIV) factor)*

factor          : (PLUS|MINUS) factor
                : power

power           : call ((POW|MOD) factor)*

call            : atom LPAREN (expr (COMMA expr)*)? RPAREN

atom            : INT|FLOAT|STRING|IDENTIFIER
                : LPAREN expr RPAREN
                : list-expr
                : if-expr
                : for-expr
                : while-expr
                : func-def

list-expr       : LSQUARE (expr (COMMA expr)*)? RSQUARE

if-expr         : KEYWORD:if expr ((NEWLINE)*?|LBRACE)
                  (statements RBRACE if-expr-b|if-expr-c?)
                  | (NEWLINE statements RBRACE if-expr-b|if-expr-c)

if-expr-b       : KEYWORD:elif expr ((NEWLINE)*?|LBRACE)
                  (statements RBRACE if-expr-b|if-expr-c?)
                  | (NEWLINE statements RBRACE if-expr-b|if-expr-c)

if-expr-c       : KEYWORD:else ((NEWLINE)*?|LBRACE)
                  (statements RBRACE)
                  | (NEWLINE statements RBRACE)

for-expr        : KEYWORD:for IDENTIFIER EQ expr KEYWORD:until expr 
                  (KEYWORD:step expr)? ((NEWLINE)*?|LBRACE) 
                  (statements RBRACE) 
                  | (NEWLINE statements RBRACE)

while-expr      : KEYWORD:while expr ((NEWLINE)*?|LBRACE)
                  (statements RBRACE) 
                  | (NEWLINE statements RBRACE)

func-def        : KEYWORD:define IDENTIFIER? 
                  LPAREN (IDENTIFIER (COMMA IDENTIFIER)*)? RPAREN
                  (ARROW expr) | (((NEWLINE)*?|LBRACE) statements RBRACE)